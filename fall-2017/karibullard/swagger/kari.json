{
    "swagger": "2.0",
    "info": {
        "description": "This is for AD420",
        "version": "1000000000000000.0.0",
        "title": "Kari Bullard API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "ad420-karibullard.swagger.io",
    "basePath": "/v2",
    "schemes": [
        "http"
    ],
    "paths": {
        "/user": {
            "post": {
                "summary": "Add a new user",
                "description": "",
                "operationId": "addUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "summary": "Update an existing user",
                "description": "",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "summary": "Finds users by id",
                "description": "",
                "operationId": "findUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID value for filter",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/user/{id}/tasks": {
            "get": {
                "summary": "Get all the tasks for a user",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successfuly operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/defenitions/Task"
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}/tasks/{taskID}": {
            "get": {
                "summary": "Find task by ID",
                "description": "Returns a single task",
                "operationId": "getTaskById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "ID of task to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "definitions": null,
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "due": {
                    "type": "string",
                    "format": "date-time"
                },
                "completed": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Task Status",
                    "enum": [
                        "new",
                        "inprogress",
                        "blocked",
                        "completed"
                    ]
                },
                "owner": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "Task"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
