swagger: '2.0'
info:
  description: API for a task application | Designed fall 2017 for AD420
  version: 1.0.0
  title: Kari Bullard | Cloud-Dev Hands-On
  contact:
    email: kari.e.bullard@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: users
    description: Operations to perform on users
  - name: tasks
    description: Operations to perform on tasks
schemes:
  - http
paths:
  /user:
    get:
      tags:
        - users
      summary: Get user by name
      description: ''
      operationId: getUser
      produces:
        - application/json
      parameters:
        - name: userName
          in: query
          description: name of user to get
          required: false
          type: string
      responses:
        '200':
          description: user found
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: invalid input
        '404':
          description: users not found
    post:
      tags:
        - users
      summary: Add user
      description: Adds a new user
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newUser
          description: new user to be added
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successfully added new user
        '400':
          description: invalid input
  '/users/{id}':
    get:
      tags:
        - users
      summary: Get user by id
      description: ''
      operationId: getUserByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id to look up
          required: true
          type: integer
      responses:
        '200':
          description: user found
          schema:
            $ref: '#/definitions/User'
        '400':
          description: invalid input
        '404':
          description: user id not found
    put:
      tags:
        - users
      summary: Update user
      description: ''
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updatesForUser
          description: update user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: user updated
        '400':
          description: invalid ID
        '404':
          description: user not found
    delete:
      tags:
        - users
      summary: Delete user
      description: delete user
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        - name: id
          in: header
          required: false
          type: string
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: user deleted
        '400':
          description: invalid input
        '404':
          description: user not found
  '/users/{id}/tasks':
    get:
      tags:
        - tasks
      summary: User tasks
      description: ''
      operationId: userTasks
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: integer
        - name: taskName
          in: query
          description: ''
          required: false
          type: string
      responses:
        '200':
          description: found task
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '400':
          description: invalid input
        '404':
          description: task not found
    post:
      tags:
        - tasks
      summary: Add a task
      description: ''
      operationId: addTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: newTask
          description: task to be added
          required: false
          schema:
            $ref: '#/definitions/Task'
      responses:
        '201':
          description: task created
        '400':
          description: invalid input
  '/users/{userID}/tasks/{taskID}':
    get:
      tags:
        - tasks
      summary: Get task by ID
      description: ''
      operationId: getTask
      produces:
        - application/json
      parameters:
        - name: userID
          in: path
          description: task ID
          required: true
          type: integer
        - name: taskID
          in: query
          description: find user task by id
          required: false
          type: string
      responses:
        '200':
          description: found user task
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: invalid input
        '404':
          description: task not found
    put:
      tags:
        - tasks
      summary: Update a task
      description: ''
      operationId: updateTask
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: updateTask
          description: task to update
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '201':
          description: task updated
        '400':
          description: invalid input
        '404':
          description: task not found
    delete:
      tags:
        - tasks
      summary: Delete a task
      description: ''
      operationId: deleteTask
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: userID
          in: path
          description: id of owner of task
          required: true
          type: integer
          format: int64
        - name: taskID
          in: path
          description: id of task
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: task deleted
        '400':
          description: invalid input
        '404':
          description: task not found
definitions:
  User:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: kbullard
      firstName:
        type: string
        example: Kari
      lastName:
        type: string
        example: Bullard
      tasks:
        type: array
        items:
          $ref: '#/definitions/User'
  Task:
    required:
      - taskId
      - taskName
    properties:
      taskId:
        type: integer
        format: int64
        example: 1
      taskName:
        type: string
        example: Do some HW
      complete:
        type: boolean
        default: false
